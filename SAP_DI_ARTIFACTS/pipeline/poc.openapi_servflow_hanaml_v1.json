{"properties":{},"iconsrc":"../../openapi_logo.svg","description":"PoC OpenAPI Server HANA / ML","processes":{"mlscenario1":{"component":"MLScenario","metadata":{"label":"MLScenario","x":535,"y":137,"height":80,"width":120,"extensible":true,"config":{"script":"import hana_ml\nimport pandas as pd\nimport itertools\nimport multiprocessing\n\nimport os\nimport io\nimport datetime\n\n## Functions\n\ndef osMemStats():\n    #   free -t -g   # Gb\n    #   free -t -m   # Mb\n    #   free -t -m   # Mb\n    \n    tot_m, used_m, free_m = map(int, os.popen('free -t -m').readlines()[-1].split()[1:])\n    \n    \n    return ( { \"Timestamp:\" : str(datetime.datetime.now()) ,  \"Total Memory\" : tot_m,  \"Used Memory\" : used_m, \"Free Memory\" : free_m } );\n\n\n\n\n######## Input Port for Pipeline\ndef on_inputmsg(msg):\n    api.logger.info(\"[CUSTOM] msg is type \" + str(type(msg))  )\n    api.logger.info(\"[CUSTOM] msg contents: \" + str(msg) )\n    \n\n    \n    try:\n        \n        ##\n        conn = hana_ml.dataframe.ConnectionContext(\n                api.config.hanaConnection['connectionProperties']['host'],\n                api.config.hanaConnection['connectionProperties']['port'],\n                api.config.hanaConnection['connectionProperties']['user'],\n                api.config.hanaConnection['connectionProperties']['password']\n                , encrypt='true',sslValidateCertificate='false')\n        \n        memBefore = osMemStats()\n        \n        maxrowcount = 100\n        if \"openapi.path_params.rows\" in msg.attributes:\n            maxrowcountStr = str(msg.attributes[\"openapi.path_params.rows\"])\n            if maxrowcountStr.isdigit():\n                maxrowcount = int(maxrowcountStr)\n              \n        df_hana = conn.table(table = 'TESTTAB', schema = 'DBADMIN')\n        df_pandas = df_hana.head(maxrowcount).collect() \n        \n        buf = io.StringIO()\n        df_pandas.info(buf=buf , memory_usage=\"deep\" )\n        df_pandas_memory = buf.getvalue()\n        \n        memAfter = osMemStats()\n        \n        # New Example 'Body'... see swagger definition\n        msg.body[\"Body\"] = { \"HanaRowCount\" : maxrowcount , \"PandasDataframeMemory\" : df_pandas_memory , \"memBefore\" : memBefore , \"memAfter\" : memAfter}\n                     \n\n        #Send to output port\n        api.send(\"outmessage\", msg)\n    except:\n        api.logger.error(\"[CUSTOM] Error in PythonML on_inputmsg function\" )\n        api.send(\"outmessage\", msg)\n\n\n\n\n#Bind input ports to functions\napi.set_port_callback(\"inputmsg\", on_inputmsg)\n\n\n","hanaConnection":{"configurationType":"Configuration Manager","connectionID":"HANA_CLOUD_80750_78714"}}}},"javascriptoperator21":{"component":"com.sap.system.jsmengine","metadata":{"label":"Greeter","x":343,"y":43,"height":80,"width":120,"extensible":true,"config":{"script":"$.setPortCallback(\"input\",onInput);\n\n// for simplicity, no \nvar count = 0;\nvar totalgreeted = 0;\nvar greeted = {};\n\nfunction isByteArray(data) {\n    return (typeof data === 'object' && Array.isArray(data) \n        && data.length > 0 && typeof data[0] === 'number')\n}\n\nfunction sendResponse(s, m, e) {\n    if ($.output === null) {\n        // invoke the callback directly\n        $.sendResponse(s, m, e);\n    } else {\n        // let the subsequent operator decide what to do\n        if (e !== null) {\n            m.Attributes[\"message.response.error\"] = e;\n        }\n        $.output(m);\n    }\n}\n\nfunction sendResponsePyML(s, m, e) {\n    if ($.outputPyML === null) {\n        // invoke the callback directly\n        $.sendResponsePyML(s, m, e);\n    } else {\n        // let the subsequent operator decide what to do\n        if (e !== null) {\n            m.Attributes[\"message.response.error\"] = e;\n        }\n        $.outputPyML(m);\n    }\n}\n\nfunction publish(s, ssrid, to, body) {\n    var msg = {};\n    msg.Attributes = {\n        \"openapi.header.x-request-key\": ssrid,\n        \"openapi.responder.publish\": to\n    };\n    msg.Body = body;\n    sendResponse(s, msg, null);\n}\n\nfunction onInput(ctx,s) {\n    var msg = {};\n\n    var inbody = s.Body;\n    var inattributes = s.Attributes;\n    \n    // convert the body into string if it is bytes\n    if (isByteArray(inbody)) {\n        inbody = String.fromCharCode.apply(null, inbody);\n    }\n\n    // prepare for a response message\n    msg.Attributes = {};\n    for (var key in inattributes) {\n        // only copy the headers that won't interfer with the recieving operators\n        if (key.indexOf(\"openapi.header\") < 0 || key === \"openapi.header.x-request-key\") {\n             msg.Attributes[key] = inattributes[key];\n        }\n    }\n    \n    // build the response\n    var reqmethod = inattributes[\"openapi.method\"];\n    var reqpath = inattributes[\"openapi.request_uri\"];\n    var opid = inattributes[\"openapi.operation_id\"];\n\n    switch (opid) {\n        case \"ping\":\n            msg.Body = {\"pong\": count++};\n            sendResponse(s, msg, null);\n            break;\n        case \"echo\":\n            msg.Body = {\"echo\": inbody};\n            sendResponse(s, msg, null);\n            break;\n        case \"pyml1\":\n            msg.Body = {\"pyml1_inS\": s };\n            sendResponsePyML(s, msg, null);\n            break;\n        case \"getGreetSummary\":\n            msg.Body = {\"greeted\": Object.keys(greeted), \"total\": totalgreeted};\n            //sendResponse(s, msg, null);\n            sendResponsePyML(s, msg, null);\n            break;\n        case \"getGreetStatus\":\n            gname = inattributes[\"openapi.path_params.name\"];\n            gcount = greeted[gname];\n            if (gcount === undefined) {\n                gcount = 0;\n            }\n            msg.Body = {\"count\": gcount, \"name\": gname};\n            sendResponse(s, msg, null);\n            break;\n        case \"greet\":\n            gname = inattributes[\"openapi.path_params.name\"];\n            ssrid = inattributes[\"openapi.header.x-request-key\"];\n            gcount = greeted[gname];\n            if (gcount === undefined) {\n                gcount = 0;\n            }\n            gcount++;\n            totalgreeted++;\n            greeted[gname] = gcount;\n            jsonbody = JSON.parse(inbody);\n            bodyname = jsonbody[\"name\"];\n            bodytext = jsonbody[\"text\"];\n            if (bodyname === undefined || bodytext === undefined) {\n                sendResponse(s, msg, Error(\"Invalid body. Missing name or text\"))\n            } else {\n                msg.Body = {\"from\": gname, \"to\": bodyname, \"text\": bodytext};\n                sendResponse(s, msg, null);\n                if (ssrid !== undefined) {\n                    publish(s, ssrid, bodyname, msg.Body);\n                }\n            }\n            break;\n        case \"upload\":\n            gname = inattributes[\"openapi.path_params.name\"];\n            filename = inattributes[\"openapi.file_params.file#name\"];\n            filecontent = inattributes[\"openapi.file_params.file\"];\n            // for now, just return the name of the file and the size of the base64 content\n            msg.Body = {\"name\": filename, \"size\": filecontent.length};\n            sendResponse(s, msg, null);\n            break;\n        case \"subscribe\":\n            gname = inattributes[\"openapi.path_params.name\"];\n            ssrid = inattributes[\"openapi.header.x-request-key\"];\n            // subscribe is enabled when a request uses swaggersocket and has this id.\n            if (ssrid !== undefined) {\n                msg.Attributes[\"openapi.responder.reuse.name\"] = gname;\n                msg.Attributes[\"openapi.responder.reuse.hello\"] = {\"from\": gname, \"text\": \"hello\", \"to\": \"*\"}\n                msg.Attributes[\"openapi.responder.reuse.bye\"] = {\"from\": gname, \"text\": \"bye\", \"to\": \"*\"}\n            }\n            msg.Body = [];\n            sendResponse(s, msg, null);\n            break;\n        case \"unsubscribe\":\n            sid = inattributes[\"openapi.path_params.sid\"];\n            ssrid = inattributes[\"openapi.header.x-request-key\"];\n            // unsubscribe is enabled when a request uses swaggersocket and has this id.\n            if (ssrid !== undefined) {\n                msg.Attributes[\"openapi.responder.release\"] = sid;\n            }\n            msg.Body = {\"greeted\": Object.keys(greeted), \"total\": totalgreeted};\n            sendResponse(s, msg, null);\n            break;\n        default:\n            sendResponse(s, msg, Error(\"Unexpected operation ID \" + opid))\n            break;\n    }\n}\n"},"additionaloutports":[{"name":"outputPyML","type":"message"}]}},"openapiservlow1":{"component":"com.sap.openapi.server","metadata":{"label":"OpenAPI Servlow","x":12,"y":38,"height":80,"width":120,"ui":"dynpath","config":{"basePath":"/poc/hanaml","swaggerSpec":"{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"contact\": {\n            \"email\": \"vora@www.sap.com\"\n        },\n        \"description\": \"This is a vFlow greeter demo.\",\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"termsOfService\": \"http://www.sap.com/vora/terms/\",\n        \"title\": \"vFlow greeter demo API\",\n        \"version\": \"1.1.0\"\n    },\n    \"schemes\": [\n        \"http\",\n        \"https\"\n    ],\n    \"basePath\": \"/demo\",\n    \"paths\": {\n        \"/v1/echo\": {\n            \"post\": {\n                \"consumes\": [\n                    \"text/plain\"\n                ],\n                \"description\": \"Echo back the message\",\n                \"operationId\": \"echo\",\n                \"parameters\": [\n                    {\n                        \"description\": \"A message\",\n                        \"in\": \"body\",\n                        \"name\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns an echo message\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/echoReply\"\n                        }\n                    }\n                },\n                \"summary\": \"Echo back the message\"\n            }\n        },\n        \"/v1/greet\": {\n            \"get\": {\n                \"description\": \"Show who has been greeted\",\n                \"operationId\": \"getGreetSummary\",\n                \"parameters\": [],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Greeting summary\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/greetingSummary\"\n                        }\n                    }\n                },\n                \"summary\": \"Show who has been greeted\"\n            }\n        },\n        \"/v1/greet/{name}\": {\n            \"get\": {\n                \"description\": \"Show when the person was last greeted\",\n                \"operationId\": \"getGreetStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"greeter's name\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Greeting status\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/greetingStatus\"\n                        }\n                    }\n                },\n                \"summary\": \"Show when the person was greeted last\"\n            },\n            \"post\": {\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"description\": \"Greet someone\",\n                \"operationId\": \"greet\",\n                \"parameters\": [\n                    {\n                        \"description\": \"greeter's name\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"A greeting message\",\n                        \"in\": \"body\",\n                        \"name\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/greeting\"\n                        }\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"A greeting response\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/greetingReply\"\n                        }\n                    }\n                },\n                \"summary\": \"Greet someone\"\n            }\n        },\n        \"/v1/greet/{name}/upload\": {\n            \"post\": {\n                \"consumes\": [\n                    \"multipart/form-data\"\n                ],\n                \"description\": \"Upload a greeting card\",\n                \"operationId\": \"upload\",\n                \"parameters\": [\n                    {\n                        \"description\": \"greeter's name\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"greeting card file to upload\",\n                        \"in\": \"formData\",\n                        \"name\": \"file\",\n                        \"required\": false,\n                        \"type\": \"file\"\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Upload status\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/uploadStatus\"\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Storage Full\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"summary\": \"Upload a greeting card\"\n            }\n        },\n        \"/v1/ping\": {\n            \"get\": {\n                \"description\": \"Ping the greeter service\",\n                \"operationId\": \"ping\",\n                \"parameters\": [],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns a pong\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/pong\"\n                        }\n                    }\n                },\n                \"summary\": \"Ping the greeter service\"\n            }\n        },\n        \"/v1/pyml1\": {\n            \"get\": {\n                \"description\": \"Call Python ML operator\",\n                \"operationId\": \"pyml1\",\n                \"parameters\": [],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns a python ml message response\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/pyml1Status\"\n                        }\n                    }\n                },\n                \"summary\": \"Ping the greeter service\"\n            }\n        },\n        \"/v1/pyml1/{rows}\": {\n            \"get\": {\n                \"description\": \"Call Python ML operator\",\n                \"operationId\": \"pyml1\",\n                \"parameters\": [                    {\n                        \"description\": \"Number of Hana Rows to move to a Pandas Dataframe\",\n                        \"in\": \"path\",\n                        \"name\": \"rows\",\n                        \"required\": true,\n                        \"type\": \"integer\"\n                    }],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns a python ml message response\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/pyml1Status\"\n                        }\n                    }\n                },\n                \"summary\": \"Ping the greeter service\"\n            }\n        },\n        \"/v1/subscribe/{name}\": {\n            \"get\": {\n                \"description\": \"Subscribe to the greeting events\",\n                \"operationId\": \"subscribe\",\n                \"parameters\": [\n                    {\n                        \"description\": \"greeted name\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Subscription information\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/greetingReply\"\n                            }\n                        }\n                    }\n                },\n                \"summary\": \"Subscribe to the greeting events\"\n            }\n        },\n        \"/v1/unsubscribe/{sid}\": {\n            \"delete\": {\n                \"description\": \"Unsubscribe from the greeting events\",\n                \"operationId\": \"unsubscribe\",\n                \"parameters\": [\n                    {\n                        \"description\": \"subscription id\",\n                        \"in\": \"path\",\n                        \"name\": \"sid\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Greeting summary\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/greetingSummary\"\n                            }\n                        }\n                    }\n                },\n                \"summary\": \"Unsubscribe from the greeting events\"\n            }\n        }\n    },\n    \"definitions\": {\n        \"echoReply\": {\n            \"properties\": {\n                \"echo\": {\n                    \"description\": \"echo\",\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"greeting\": {\n            \"properties\": {\n                \"name\": {\n                    \"description\": \"greeting person\",\n                    \"type\": \"string\"\n                },\n                \"text\": {\n                    \"description\": \"greeting text\",\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"greetingReply\": {\n            \"properties\": {\n                \"from\": {\n                    \"description\": \"greeting person\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"description\": \"greeted person\",\n                    \"type\": \"string\"\n                },\n                \"text\": {\n                    \"description\": \"greeting reply text\",\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"greetingStatus\": {\n            \"properties\": {\n                \"count\": {\n                    \"description\": \"greeting count\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"description\": \"greeted person\",\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"greetingSummary\": {\n            \"properties\": {\n                \"greeted\": {\n                    \"description\": \"greeted persons\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                },\n                \"total\": {\n                    \"description\": \"total greeting count\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"pong\": {\n            \"properties\": {\n                \"pong\": {\n                    \"description\": \"pong counter\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"pyml1Status\": {\n            \"properties\": {\n                \"pyml1_inS\": {\n                    \"description\": \"pyml1_inS\",\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"uploadStatus\": {\n            \"properties\": {\n                \"name\": {\n                    \"description\": \"greeting name\",\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"description\": \"greeting card size\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    },\n    \"securityDefinitions\": {\n        \"UserSecurity\": {\n            \"type\": \"basic\"\n        },\n        \"TokenSecurity\": {\n            \"type\": \"apiKey\",\n            \"in\": \"header\",\n            \"name\": \"authorization\"\n        },\n        \"XRequestedWith\": {\n            \"type\": \"apiKey\",\n            \"in\": \"header\",\n            \"name\": \"x-requested-with\"\n        }\n    },\n    \"security\": [\n        {\n            \"UserSecurity\": []\n        },\n        {\n            \"TokenSecurity\": []\n        },\n        {\n            \"XRequestedWith\": []\n        }\n    ]\n}\n","websocket":true,"maxConcurrency":3}}},"wiretap1":{"component":"com.sap.util.wiretap","metadata":{"label":"Wiretap","x":172,"y":43,"height":80,"width":120,"ui":"dynpath","config":{"layout":"[%d] %m","maxSize":8192}}},"21multiplexer1":{"component":"com.sap.system.multiplexer.2-1","metadata":{"label":"2:1 Multiplexer","x":707,"y":-2,"height":80,"width":120,"extensible":true,"config":{}}}},"groups":[{"name":"group1","nodes":["mlscenario1"],"metadata":{"description":"Scale Up Group"},"restartPolicy":"restart"}],"connections":[{"metadata":{"points":"136,78 151.5,78 151.5,83 167,83"},"src":{"port":"out","process":"openapiservlow1"},"tgt":{"port":"in","process":"wiretap1"}},{"metadata":{"points":"296,83 338,83"},"src":{"port":"out","process":"wiretap1"},"tgt":{"port":"input","process":"javascriptoperator21"}},{"metadata":{"points":"467,74 584.5,74 584.5,29 702,29"},"src":{"port":"output","process":"javascriptoperator21"},"tgt":{"port":"in1","process":"21multiplexer1"}},{"metadata":{"points":"831,38 881,38 881,-50 -43,-50 -43,78 7,78"},"src":{"port":"out1","process":"21multiplexer1"},"tgt":{"port":"ret","process":"openapiservlow1"}},{"metadata":{"points":"467,92 498.5,92 498.5,186 530,186"},"src":{"port":"outputPyML","process":"javascriptoperator21"},"tgt":{"port":"inputmsg","process":"mlscenario1"}},{"metadata":{"points":"659,195 680.5,195 680.5,47 702,47"},"src":{"port":"outmessage","process":"mlscenario1"},"tgt":{"port":"in2","process":"21multiplexer1"}}],"inports":{},"outports":{}}